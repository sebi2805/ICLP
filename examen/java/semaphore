import java.util.concurrent.Semaphore;
import java.util.concurrent.ThreadLocalRandom;

public class Semaphores {
    static Semaphore semaphore = new Semaphore(3); 

    static class MyThread extends Thread {
        String name;

        MyThread(String name) {
            this.name = name;
        }

        public void run() {
            try {
                semaphore.acquire(); // Ob»õine un permis
                try {
                    for (int i = 1; i <= 3; i++) {
                        System.out.println(name + " : is performing operation " + i);
                        Thread.sleep(ThreadLocalRandom.current().nextInt(1000)); 
                    }
                } finally {
                    semaphore.release(); 
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        MyThread t1 = new MyThread("A");
        t1.start();

        MyThread t2 = new MyThread("B");
        t2.start();

        MyThread t3 = new MyThread("C");
        t3.start();

        MyThread t4 = new MyThread("D");
        t4.start();
    }
}
